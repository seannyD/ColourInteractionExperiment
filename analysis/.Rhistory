xlab("First user") +
ylab("Total frequency in final week")
gInvBy = ggplot(variants,
aes(x=inventedBy,y=freq_week_4_total)) +
geom_boxplot() +
xlab("First user") +
ylab("Total frequency in final week")
pdf("../results/descriptive/graphs/InventedBy.pdf",
width=4, height=4)
gInvBy
dev.off()
gInvBy = ggplot(variants,
aes(x=inventedBy,y=freq_week_4_total)) +
geom_boxplot() +
xlab("First user") +
ylab("Total frequency in final week") +
coord_cartesian(ylim=c(0,17))
gInvBy
gInvBy = ggplot(variants,
aes(x=inventedBy,y=freq_week_4_total)) +
geom_boxplot()
gInvBy
variants$freq_week_4_total
variants$freq_week_4
variants$freq_week_4_total[is.na(variants$freq_week_4_total)] = 0
gInvBy = ggplot(variants,
aes(x=inventedBy,y=freq_week_4_total)) +
geom_boxplot() +
xlab("First user") +
ylab("Total frequency in final week") +
coord_cartesian(ylim=c(0,17))
gInvBy
ggplot(variants, aes(x=inventedBy,y=freq_week_4>0)) +
geom_violin() +
xlab("First user") +
ylab("Frequency in final week")
variants$sign_survives = variants$freq_week_4>0
ggplot(variants, aes(x=inventedBy,y=sign_survives)) +
geom_violin() +
xlab("First user") +
ylab("Frequency in final week")
ggplot(variants, aes(x=inventedBy,y=sign_survives)) +
geom_boxplot()
variants$sign_survives = as.numeric(variants$freq_week_4>0)
ggplot(variants, aes(x=inventedBy,y=sign_survives)) +
geom_boxplot()
variants$sign_survives = variants$freq_week_4>0
ggplot(variants, aes(x=inventedBy,y=sign_survives)) +
geom_bar()
variants$sign_survives = variants$freq_week_4>0
ggplot(variants, aes(y=sign_survives, group=inventedBy)) +
geom_bar()
variants$sign_survives = variants$freq_week_4>0
ggplot(variants, aes(x=sign_survives, group=inventedBy)) +
geom_bar()
variants$sign_survives = variants$freq_week_4>0
ggplot(variants, aes(x=sign_survives, groups=inventedBy)) +
geom_bar()
ggplot(variants, aes(x=sign_survives, colour=inventedBy)) +
geom_bar()
variants$sign_survives = variants$freq_week_4>0
ggplot(variants, aes(x=inventedBy, colour=sign_survives)) +
geom_bar()
ggplot(variants, aes(x=inventedBy, fill=sign_survives)) +
geom_bar()
summary(finalModel)
summary(finalModel)
---
title: "Colour experiment"
output:
pdf_document:
toc: true
---
\newpage
# Introduction
This analysis looks at the sign variants used in a colour naming game between signers of different sign languages meeting after 1 week of interaction and after 3 weeks of interaction.  The data was collected by Kang Suk Byun (Kang-Suk.Byun@mpi.nl).
The analysis tries to predict the relative frequency of each variant within a colour category in week 3, based on measures from week 1.
## Data
-  colour: Code of the target colour
-  colourName: English name of the target colour
-  sign: label for the variant produced
-  freq_week_1_total: Total number of occurances of the variant in the first week, across all colour contexts.
-  freq_week_4_total: Total number of occurances of the variant in the final week, across all colour contexts.
-  freq_week_1: Number of occurances of the variant used during the given target colour context in week 1.
-  freq_week_4: Number of occurances of the variant used during the given target colour context in the final week.
-  prop_week_1: Same as freq_week_1, but as a proportion of all variants used in the given colour context.
-  prop_week_4: Same as freq_week_4, but as a proportion of all variants used in the given colour context.
-  origin:  The origin language of the sign.  For many, identifying an origin is not possible, so is labelled "None"
-  iconic: Old variable
-  check: The number of times this variable was used in a checking turn.
-  indexical:  Is the variant non-indexical, indexical or indexical of the body?
-  inventedBy:  The name of the first signer to use this variant in the experiment.
-  TryMarked:  The number of times this sign was used in try-marking.
-  Teach:  The number of times this sign was explicitly taught.
-  averageLength_week_1:  Average time to produce the variant in milliseconds
-  averageTrialLength_week_1:  Average time for completing the trial for the given target colour.
-  BodyAnchor:  Is the variant body-anchored (redundant with 'indexical')
\newpage
## Poisson regression
This study uses a mixed effects regression model with poisson distributions.  Most standard regression analyses assume that the values they are trying to model come from a normal distribution, like this:
```{r echo=F}
set.seed(237)
hist(rnorm(1000, mean = 8, sd = 2), main='', xlab='Frequency', ylab='Count')
```
However, the main variable for this study is the frequency of sign variants, with a strong skew and many zero values:
```{r echo=F}
variants = read.csv('../data/processedData/variants_summary.csv', stringsAsFactors = F)
hist(variants$freq_week_4, main='', xlab='Frequency', ylab='Count', breaks=0:max(variants$freq_week_4))
```
Instead of using a normal distribution as the basis for the statistical model or transforming the data (which is difficult anyway because of the large number of zero counts), we can use a poisson distribution.  This also has the advantage of only predicting whole, non-negative numbers, which makes sense for this data because a variant can't be used half a time or a negative number of times.
# Load libraries
```{r warning=F, message=F}
library(ggplot2)
library(lme4)
library(Rmisc)
library(dplyr)
library(sjPlot)
library(gridExtra)
library(REEMtree)
```
```{r echo=F}
setwd("~/Documents/MPI/KangSukColours/ColourExperiment/analysis/")
getMEText = function(r,ef, wald=NULL, showWald=F){
AIC = r[2,]$AIC
loglikDiff = signif(diff(r$logLik),2)
chi = round(r$Chisq[2],2)
df = r$`Chi Df`[2]
p = signif(r$`Pr(>Chisq)`[2],2)
wald.text = ""
if(!is.null(wald)){
est = signif(wald[1],2)
stder = signif(wald[2],2)
t = signif(wald[3],2)
wptext = ""
wald.text =  paste("beta = ",est,",")
if(showWald){
if(!is.na(wald[4])){
wptext = paste(", Wald p =",signif(wald[4],2))
}
wald.text = paste("beta = ",est,", std.err = ",stder, ", Wald t = ",t,wptext,';')
}
}
begin = 'There was no significant'
if(p <0.09){
begin = "There was a marginal"
}
if(p < 0.05){
begin = 'There was a significant'
}
return(paste(begin,ef,"(",wald.text,"log likelihood difference =",
loglikDiff,", df = ",df,", Chi Squared =", chi,", p = ",p,")."))
}
```
# Load data
```{r}
variants = read.csv('../data/processedData/variants_summary.csv', stringsAsFactors = F)
```
There is only 1 variant for `white'.  Therefore, we remove it from this statistical analysis.
```{r}
variants = variants[variants$colourName!='white',]
```
Some variants need to be removed:
```{r}
variants = variants[!variants$sign %in%
c("SAME",
"DIFFERENT",
"DO NOT UNDERSTAND",
"UNDERSTAND",
"ME",
"YOU",
"YES",
"NOT",
"SIGNING"),]
```
Transform some variables.
```{r}
# The range of values for 'Teach' is very small:
table(variants$Teach)
# So we'll turn it into a binary category:
#  variants that were never taught and variants that were
variants$Teach = as.factor(variants$Teach >0)
# Similar for checking and candidate understandings
variants$check.any = as.factor(variants$check>0)
variants$candidateUnderstanding.any = as.factor(variants$candidateUnderstanding>0)
variants$T0 = c("No","Check")[as.numeric(variants$check.any=="TRUE")+1]
variants$T0[variants$candidateUnderstanding.any=="TRUE"] = "Candidate Understanding"
# Collapse checks and candidate understandings
variants$T0[variants$T0 %in% c("Check","Candidate Understanding")] = "Yes"
variants$T0 = factor(variants$T0, levels = c("No","Yes"))
# ... and T-1
variants$T_minus_1.any = as.factor(variants$T_minus_1>0)
# Transform total frequency
variants$freq_week_1_total.logcenter =
log(variants$freq_week_1_total + 1)
variants$freq_week_1_total.logcenter = scale(variants$freq_week_1_total.logcenter)
# cut TryMarking into two categories
variants$TryMarked.any = as.factor(variants$TryMarked>0)
# transform length
# One extreme value is scaled down to the next highest number
variants$averageLength_week_1[
variants$averageLength_week_1>30000] =
max(variants$averageLength_week_1[
variants$averageLength_week_1<20000])
variants$averageLength_week_1.logcenter = log(variants$averageLength_week_1)
variants$averageLength_week_1.logcenter =
scale(variants$averageLength_week_1.logcenter)
variants$indexical = as.factor(variants$indexical)
# Make inventedBy deviation coding
#  (deviation from the grand mean)
variants$inventedBy = as.factor(variants$inventedBy)
listofsigns = variants[,c("colourName","sign")]
write.csv(listofsigns,"../results/descriptive/ListOfVariants.csv", fileEncoding = 'utf-8')
mTryXF = glmer(freq_week_4 ~
1 +
freq_week_1_total.logcenter +
averageLength_week_1.logcenter +
indexical +
Teach +
TryMarked.any +
T0 +
T_minus_1.any +
inventedBy +
T0:freq_week_1_total.logcenter +
Teach:freq_week_1_total.logcenter +
TryMarked.any:freq_week_1_total.logcenter +
(1 + indexical || colourName) ,
data=variants, family=poisson,
control=gcontrol)
finalModel = mTryXF
summary(finalModel)
prop.table(table(varaints$freq_week_4>0,variants$inventedBy))
prop.table(table(variants$freq_week_4>0,variants$inventedBy))
itx = prop.table(table(
variants$inventedBy,
variants$freq_week_4>0))
itx
?prop.test
?prop.table
prop.table(table(
variants$inventedBy,
variants$freq_week_4>0), margin=2)
prop.table(table(
variants$inventedBy,
variants$freq_week_4>0), margin=1)
table(
variants$inventedBy,
variants$freq_week_4>0)
2/26
4/25
2/13
2/15
itx = prop.table(table(
variants$inventedBy,
variants$freq_week_4>0), margin=1)
ggplot(variants, aes(x=inventedBy, fill=sign_survives)) +
geom_bar()
itx = prop.table(table(
variants$inventedBy,
variants$freq_week_4>0), margin=1)
ggplot(itx) +
geom_bar()
barplot(itx)
barplot(itx,beside = T)
barplot(t(itx))
itx
ggplot(variants,
aes(x=inventedBy, group=indexical)) +
geom_bar()
table(variants$inventedBy, variants$indexical)
ggplot(variants,
aes(x=inventedBy, fill=indexical)) +
geom_bar()
summary(finalModel)
finalModelFull = update(finalModel, ~. +
(0 + Teach + check.any +
T_minus_1.any + inventedBy || colourName),
control=gcontrol)
cor.test(fixef(finalModel), fixef(finalModelFull))
summary(finalModelFull)
prop.table(table(
variants$inventedBy,
variants$indexical
))
prop.table(table(
variants$inventedBy,
variants$indexical,
index=1
))
prop.table(table(
variants$inventedBy,
variants$indexical
),index=1)
prop.table(table(
variants$inventedBy,
variants$indexical
),margin=1)
itInx = prop.table(table(
variants$inventedBy,
variants$indexical
),margin=1)
itInx = prop.table(table(
variants$inventedBy,
variants$indexical
),margin=1)
barplot(t(itInx))
ggplot(melt(itInx))
melt(itInx)
library(reshape2)
melt(itInx)
ggplot(melt(itInx),
aes(x=Var1, colour=var2)) +
geom_bar()
ggplot(melt(itInx),
aes(x=Var1, colour=Var2)) +
geom_bar()
ggplot(variants,
aes(x=inventedBy, fill=indexical, y=..prop..)) +
geom_bar()
ggplot(variants,
aes(x=inventedBy, fill=indexical)) +
geom_bar(position=fill)
ggplot(variants,
aes(x=inventedBy, fill=indexical)) +
geom_bar(position="fill"")
ggplot(variants,
aes(x=inventedBy, fill=indexical)) +
geom_bar(position="fill")
itx = prop.table(table(
variants$inventedBy,
variants$freq_week_4>0), margin=1)
barplot(t(itx))
ggplot(variants,
aes(x=inventedBy, fill=indexical)) +
geom_bar(position="fill")
ggplot(variants,
aes(x=inventedBy, fill=T0)) +
geom_bar(position="fill")
survived = variants[variants$freq_week_4>0,]
ggplot(variants[variants$freq_week_4>0,],
aes(x=freq_week_1_total,
y=averageLength_week_1.logcenter,
fill=inventedBy)) +
geom_point()
variants$averageLength_week_1.logcenter
typeof(averageLength_week_1.logcenter)
typeof(variants$averageLength_week_1.logcenter)
ggplot(variants[variants$freq_week_4>0,],
aes(x=freq_week_1_total,
y=averageLength_week_1.logcenter,
fill=inventedBy)) +
geom_point()
ggplot(variants[variants$freq_week_4>0,],
aes(x=freq_week_1_total,
y=averageLength_week_1,
fill=inventedBy)) +
geom_point()
ggplot(variants[variants$freq_week_4>0,],
aes(x=freq_week_1_total,
y=averageLength_week_1,
colour=inventedBy)) +
geom_point()
summary(finalModel)
ggplot(variants,
aes(x=freq_week_1_total,
y=averageLength_week_1,
colour=inventedBy)) +
geom_point()
ggplot(variants,
aes(x=freq_week_1_total,
y=averageLength_week_1,
colour=inventedBy)) +
geom_point() + scale_y_log10()
ggplot(variants,
aes(x=freq_week_1_total,
y=averageLength_week_1,
colour=inventedBy)) +
geom_point() + scale_y_log10() + geom_area()
ggplot(variants,
aes(x=freq_week_1_total,
y=averageLength_week_1,
colour=inventedBy)) +
geom_point() + scale_y_log10()
sjp.glmer(mInv, 'eff')
fixef(finalModel)
fixef(mInv)
mInv = glmer(freq_week_4 ~
1 +
freq_week_1_total.logcenter +
averageLength_week_1.logcenter +
indexical +
Teach +
TryMarked.any +
T0 +
T_minus_1.any +
inventedBy +
(1 + indexical || colourName) ,
data=variants, family=poisson,
control=gcontrol)
fixef(mInv)
length(fixef(mInv))
fixef(mInv)[10:12]
fixef(finalModel)[10:12]
anova(m0,mFrq,mLen,mIndx,mTeach,mTry,mChk,
mTm1,mInv,mT0xF,mTchxF, mTryXF)
summary(mTryXF)
summary(mTryXF)
sjp.lmer(mTryXF,'eff')
sjp.lmer(finalModel,'eff')
sjp.int(finalModel)
sjp.int(finalModel, swap.pred = T)
x = sjp.int(finalModel, show.ci = F, prnt.plot = F)
x$plot.list[[1]]$data$x = c(0.9,1.1,1.9,2.1)
x$plot.list[[1]]$coordinates$limits$x = c(0.8,2.2)
x$plot.list[[1]]$scales$scales[[1]] = scale_x_continuous(limits = c(0.8,2.2))
x$plot.list[[1]] +
scale_x_continuous(breaks=c(1,2),
labels=c("No","Yes")) +
scale_colour_discrete(breaks=c("TRUE","FALSE"),
labels = c("Yes","No")) +
labs(title="", y = "Frequency in final week", x ="Try Marked" ) +
geom_point()
x = sjp.int(finalModel, show.ci = F, prnt.plot = F)
#x$plot.list[[1]]$data$x = c(0.9,1.1,1.9,2.1)
x$plot.list[[1]]$data$x = c(1,1,2,2)
x$plot.list[[1]]$coordinates$limits$x = c(0.8,2.2)
x$plot.list[[1]]$scales$scales[[1]] = scale_x_continuous(limits = c(0.8,2.2))
x$plot.list[[1]] +
scale_x_continuous(breaks=c(1,2),
labels=c("No","Yes")) +
scale_colour_discrete(breaks=c("TRUE","FALSE"),
labels = c("Yes","No")) +
labs(title="", y = "Frequency in final week", x ="Try Marked" ) +
geom_point()
x$plot.list[[1]]
x = sjp.int(finalModel, show.ci = F, prnt.plot = F)
x
xi = sjp.int(finalModel, swap.pred = T, facet.grid = F,
prnt.plot = F)
for(i in 1:3){
freq.mx = xi$plot.list[[i]]$data$x
xi$plot.list[[i]]$data$x =
exp(freq.mx*
attr(variants$freq_week_1_total.logcenter, 'scaled:scale') +
attr(variants$freq_week_1_total.logcenter, 'scaled:center') -1)
}
ggplot(xi$plot.list[[1]]$data, aes(x,y,colour=grp)) +
geom_line()  +
xlab("Frequency") +
ylab("Predicted incidents for final week frequency") +
theme(legend.position="top") +
scale_color_discrete(name="T0")
xi$plot.list[[2]]$data$grp = c("No","Yes")[as.numeric(xi$plot.list[[2]]$data$grp)]
ggplot(xi$plot.list[[2]]$data, aes(x,y,colour=grp)) +
geom_line()  +
xlab("Frequency") +
ylab("Predicted incidents for final week frequency") +
theme(legend.position="top") +
scale_color_discrete(name="Teach")
xi$plot.list[[3]]$data$grp = c("No","Yes")[as.numeric(xi$plot.list[[3]]$data$grp)]
ggplot(xi$plot.list[[2]]$data, aes(x,y,colour=grp)) +
geom_line()  +
xlab("Frequency") +
ylab("Predicted incidents for final week frequency") +
theme(legend.position="top") +
scale_color_discrete(name="Try Marked")
xi = sjp.int(finalModel, swap.pred = T, facet.grid = F,
prnt.plot = F)
ggplot(xi$plot.list[[1]]$data, aes(x,y,colour=grp)) +
geom_line()  +
xlab("Frequency") +
ylab("Predicted incidents for final week frequency") +
theme(legend.position="top") +
scale_color_discrete(name="T0")
xi = sjp.int(finalModel, swap.pred = T, facet.grid = F,
prnt.plot = F)
for(i in 1:3){
freq.mx = xi$plot.list[[i]]$data$x
xi$plot.list[[i]]$data$x =
exp(freq.mx*
attr(variants$freq_week_1_total.logcenter, 'scaled:scale') +
attr(variants$freq_week_1_total.logcenter, 'scaled:center') -1)
}
ggplot(xi$plot.list[[1]]$data, aes(x,y,colour=grp)) +
geom_line()  +
xlab("Frequency") +
ylab("Predicted incidents for final week frequency") +
theme(legend.position="top") +
scale_color_discrete(name="T0")
xi$plot.list[[2]]$data$grp = c("No","Yes")[as.numeric(xi$plot.list[[2]]$data$grp)]
ggplot(xi$plot.list[[2]]$data, aes(x,y,colour=grp)) +
geom_line()  +
xlab("Frequency") +
ylab("Predicted incidents for final week frequency") +
theme(legend.position="top") +
scale_color_discrete(name="Teach")
xi$plot.list[[3]]$data$grp = c("No","Yes")[as.numeric(xi$plot.list[[3]]$data$grp)]
ggplot(xi$plot.list[[2]]$data, aes(x,y,colour=grp)) +
geom_line()  +
xlab("Frequency") +
ylab("Predicted incidents for final week frequency") +
theme(legend.position="top") +
scale_color_discrete(name="Try Marked")
ggplot(variants, aes(x=freq_week_1_total,
y=freq_week_4,
colour=Teach)) +
geom_point()+
stat_smooth(method = "gam", fullrange = T, se=F)
ggplot(variants, aes(x=freq_week_1_total,
y=freq_week_4,
colour=TryMarked.any)) +
geom_point()+
stat_smooth(method = "gam", fullrange = T, se=F)
