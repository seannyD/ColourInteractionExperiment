+ (1 + indexical || colourName) ,
data=variants, family=poisson,
control=gcontrol)
mFrq = glmer(freq_week_4 ~
1 +
freq_week_1_total.logcenter +
(1 + indexical || colourName) ,
data=variants, family=poisson,
control=gcontrol)
mLen = glmer(freq_week_4 ~
1 +
freq_week_1_total.logcenter +
averageLength_week_1.logcenter +
(1 + indexical || colourName) ,
data=variants, family=poisson,
control=glmerControl(
optimizer = 'bobyqa',
optCtrl = list(maxfun = 10000000)))
# add indexicality
mIndx = glmer(freq_week_4 ~
1 +
freq_week_1_total.logcenter +
averageLength_week_1.logcenter +
indexical +
(1 + indexical || colourName) ,
data=variants, family=poisson,
control=glmerControl(
optimizer = c('Nelder_Mead'),
optCtrl = list(maxfun = 100000000)))
# add whether the variant is explicitly taught
mTeach = glmer(freq_week_4 ~
1 +
freq_week_1_total.logcenter +
averageLength_week_1.logcenter +
indexical +
Teach +
(1 + indexical || colourName) ,
data=variants, family=poisson,
control=glmerControl(
optimizer = c('Nelder_Mead','bobyqa'),
optCtrl = list(maxfun = 10000000)))
mTry = glmer(freq_week_4 ~
1 +
freq_week_1_total.logcenter +
averageLength_week_1.logcenter +
indexical +
Teach +
TryMarked.any +
(1 + indexical || colourName) ,
data=variants, family=poisson,
control=gcontrol)
mChk = glmer(freq_week_4 ~
1 +
freq_week_1_total.logcenter +
averageLength_week_1.logcenter +
indexical +
Teach +
TryMarked.any +
T0 +
(1 + indexical || colourName) ,
data=variants, family=poisson,
control=gcontrol)
mTm1 = glmer(freq_week_4 ~
1 +
freq_week_1_total.logcenter +
averageLength_week_1.logcenter +
indexical +
Teach +
TryMarked.any +
T0 +
T_minus_1.any +
(1 + indexical || colourName) ,
data=variants, family=poisson,
control=glmerControl(
optimizer = c('Nelder_Mead','bobyqa'),
optCtrl = list(maxfun = 10000000)))
mInv = glmer(freq_week_4 ~
1 +
freq_week_1_total.logcenter +
averageLength_week_1.logcenter +
indexical +
Teach +
TryMarked.any +
T0 +
T_minus_1.any +
inventedBy +
(1 + indexical || colourName) ,
data=variants, family=poisson,
control=gcontrol)
```
Note that the model `mTm1` throws a convergence warning. It suggests that the estimates were still changing to some extent when the estimation process finished running.  However, a more accurate estimation of the model graident shows that the model is actually converged suitably:
```{r}
relgrad <- with(mTm1@optinfo$derivs,
solve(Hessian,gradient))
max(abs(relgrad))
```
Test some interactions:
```{r inteactions, cache=T}
mT0xF = glmer(freq_week_4 ~
1 +
freq_week_1_total.logcenter +
averageLength_week_1.logcenter +
indexical +
Teach +
TryMarked.any +
T0 +
T_minus_1.any +
inventedBy +
T0:freq_week_1_total.logcenter +
(1 + indexical || colourName) ,
data=variants, family=poisson,
control=gcontrol)
mTchxF = glmer(freq_week_4 ~
1 +
freq_week_1_total.logcenter +
averageLength_week_1.logcenter +
indexical +
Teach +
TryMarked.any +
T0 +
T_minus_1.any +
inventedBy +
T0:freq_week_1_total.logcenter +
Teach:freq_week_1_total.logcenter +
(1 + indexical || colourName) ,
data=variants, family=poisson,
control=gcontrol)
mTryXF = glmer(freq_week_4 ~
1 +
freq_week_1_total.logcenter +
averageLength_week_1.logcenter +
indexical +
Teach +
TryMarked.any +
T0 +
T_minus_1.any +
inventedBy +
T0:freq_week_1_total.logcenter +
Teach:freq_week_1_total.logcenter +
TryMarked.any:freq_week_1_total.logcenter +
(1 + indexical || colourName) ,
data=variants, family=poisson,
control=gcontrol)
```
# Results
Model comparison test:
Results of the model comparison tests.  In the output below, there is a summary of the structure of each model, then a table with titles "Df", "AIC", "BIC" etc.  Each row represents an increasingly complex model, with each fixed effect being added one at a time.  The statistics describe how much better the model fits the data compared to the model above.  A significant result (low p-value) suggests that the fixed effect significantly improves the fit of the model, and therefore is a good predictor of frequency of variants in the first week.
```{r}
modelComparisonResults =
anova(m0,mFrq,mLen,mIndx,mTeach,mTry,mChk,
mTm1,mInv,mT0xF,mTchxF, mTryXF)
modelComparisonResults
```
Choose a final model for the beta values.
```{r}
finalModel = mTryXF
```
mcr = as.data.frame(modelComparisonResults)
mcr$AIC = round(mcr$AIC,2)
mcr$BIC = round(mcr$BIC,2)
mcr$logLik = round(mcr$logLik,2)
mcr$deviance = round(mcr$deviance,2)
mcr$Chisq = round(mcr$Chisq,2)
mcr$Significance = ""
mcr$Significance[mcr$`Pr(>Chisq)`<0.05] = "*"
mcr$p = mcr$`Pr(>Chisq)`
mcr$p = round(mcr$p,2)
mcr$p[mcr$p<0.001] = "< 0.001"
mcr = mcr[,c("AIC","BIC","logLik","Chisq",'Chi Df','p',"Significance")]
mcr
dim(mcr)
mcr
c("AIC","BIC","logLik","Chisq",'Chi Df','p',"Significance") %in% names(mcr)
mcr = mcr[,c("AIC","BIC","logLik","Chisq",'Chisq Df','p',"Significance")]
mcr = mcr[,c("AIC","BIC","logLik","Chisq",'Df','p',"Significance")]
names(mcr) = c("AIC","BIC","Log likelihood","Ï‡2","Df",'p','')
mcr[is.na(mcr)] = ""
rownames(mcr) = c("Null model","Frequency","Length",
"Indexicality","Teach","Try-marking",
"T0","T-1",'Identity of first user',
"T0 x Frequency","T-1 x Frequency",
'Try-marking x Frequency')
write.csv(mcr,
"../results/inferential/ModelComparisonResults.csv",
row.names = T)
write.csv(mcr,
"../results/inferential/ModelComparisonResults.csv",
row.names = T, fileEncoding = "utf-8")
names(variants)
ggplot(variants[variants$colourName %in% c("red","brown")],aes(x=indexical,y=freq_week_4)) + geom_errorbar()
ggplot(variants[variants$colourName %in% c("red","brown")],aes(x=indexical,y=freq_week_4)) + geom_point()
ggplot(variants[variants$colourName %in% c("red","black")],aes(x=indexical,y=freq_week_4)) + geom_point()
table(variants$colourName)
ggplot(variants[variants$colourName %in% c("red","black"),],aes(x=indexical,y=freq_week_4)) + geom_point()
ggplot(variants[variants$colourName %in% c("brown"),],aes(x=indexical,y=freq_week_4)) + geom_point()
ggplot(variants[variants$colourName %in% c("red"),],aes(x=indexical,y=freq_week_4)) + geom_point()
ggplot(variants[variants$colourName %in% c("black"),],aes(x=indexical,y=freq_week_4)) + geom_point()
ggplot(variants[variants$colourName %in% c("red","brown"),],aes(x=indexical,y=freq_week_4)) + geom_point()
dotplot(ranef(finalModel))
dotplot(ranef(finalModel))
dev.off()
dev.off()
dotplot(ranef(finalModel))
ggplot(variants[variants$colourName %in% c("red","brown","black"),],
aes(x=indexical, y = freq_week_4)) +
geom_boxplot()
dev.off9)
dev.off()
dev.off()
ggplot(variants[variants$colourName %in% c("red","brown","black"),],
aes(x=indexical, y = freq_week_4)) +
geom_boxplot()
ggplot(variants[variants$colourName %in% c("red","brown","black"),],
aes(x=indexical, y = freq_week_4)) +
geom_boxplot()
ggplot(variants[variants$colourName %in% c("red","brown","black"),],
aes(x=indexical, y = freq_week_4)) +
geom_boxplot()
get_model_data(finalModel)
plot_model(finalModel)
plot_model(finalModel,'re')
install.packages('TMB', type = 'source')
install.packages("TMB", type = "source")
ls()
plot_model(finalModel,'re')
library(sjPlot)
plot_model(finalModel,'re')
get_model_data(finalModel)
get_model_data(finalModel,type = 'est')
get_model_data(finalModel,type = 're')
library(ggplot2)
library(lme4)
library(Rmisc)
library(dplyr)
library(sjPlot)
library(gridExtra)
library(REEMtree)
ggplot(variants[variants$colourName %in% c("red","brown","black"),],
aes(x=indexical, y = freq_week_4)) +
geom_point()
ggplot(variants[variants$colourName %in% c("red","brown","black"),],
aes(x=indexical, y = freq_week_4)) +
geom_point(position = position_jitter())
ggplot(variants[variants$colourName %in% c("red","brown"),],
aes(x=indexical, y = freq_week_4)) +
geom_point(position = position_jitter())
ggplot(variants[variants$colourName %in% c("red","brown","black"),],
aes(x=indexical, y = freq_week_4,colour = colourName)) +
geom_point(position = position_jitter())
ggplot(variants[variants$colourName %in% c("red","brown","black"),],
aes(x=indexical, y = freq_week_4,colour = colourName)) +
geom_point(position = position_jitter()) +
scale_colour_manual(breaks=c("red","brown","black"), values = c("red","brown","black"))
ggplot(variants[variants$colourName %in% c("red","brown","black"),],
aes(x=indexical, y = freq_week_4,colour = colourName)) +
geom_point(position = position_jitter()) +
scale_colour_manual(breaks=c("red","brown","black"), values = c("red","brown","black")) +
theme(legend.position = 'none')
ggplot(variants[variants$colourName %in% c("red","brown","black"),],
aes(x=indexical, y = freq_week_4,colour = colourName)) +
geom_point(position = position_jitter(height = 0)) +
scale_colour_manual(breaks=c("red","brown","black"), values = c("red","brown","black")) +
theme(legend.position = 'none') +
xlab("Variant indexicality") +
ylab("Final week frequency")
ggplot(variants[variants$colourName %in% c("red","brown","black"),],
aes(x=indexical, y = freq_week_4,colour = colourName)) +
geom_point(position = position_jitter(height = 0)) +
scale_colour_manual(breaks=c("red","brown","black"), values = c("red","brown","black")) +
theme(legend.position = 'none') +
xlab("Variant indexicality") +
ylab("Final week frequency")
ggplot(variants[variants$colourName %in% c("red","brown","black"),],
aes(x=indexical, y = freq_week_4,colour = colourName)) +
geom_point(position = position_jitter(height = 0)) +
scale_colour_manual(breaks=c("red","brown","black"), values = c("red","brown","black")) +
theme(legend.position = 'none') +
xlab("Variant indexicality") +
ylab("Final week frequency")
ggplot(variants[variants$colourName %in% c("red","brown","black"),],
aes(x=indexical, y = freq_week_4,colour = colourName)) +
geom_point(position = position_jitter(height = 0,width=0.1)) +
scale_colour_manual(breaks=c("red","brown","black"), values = c("red","brown","black")) +
theme(legend.position = 'none') +
xlab("Variant indexicality") +
ylab("Final week frequency")
ggplot(variants[variants$colourName %in% c("red","brown","black"),],
aes(x=indexical, y = freq_week_4,colour = colourName)) +
geom_point(position = position_jitter(height = 0, width=0.2)) +
scale_colour_manual(breaks=c("red","brown","black"), values = c("red","brown","black")) +
theme(legend.position = 'none') +
xlab("Variant indexicality") +
ylab("Final week frequency")
indxRedBrownBlackggplot(variants[variants$colourName %in% c("pink","green"),],
aes(x=indexical, y = freq_week_4,colour = colourName)) +
geom_point(position = position_jitter(height = 0, width=0.2)) +
scale_colour_manual(breaks=c("pink","green"), values = c("pink","green")) +
theme(legend.position = 'none') +
xlab("Variant indexicality") +
ylab("Final week frequency")
ggplot(variants[variants$colourName %in% c("pink","green"),],
aes(x=indexical, y = freq_week_4,colour = colourName)) +
geom_point(position = position_jitter(height = 0, width=0.2)) +
scale_colour_manual(breaks=c("pink","green"), values = c("pink","green")) +
theme(legend.position = 'none') +
xlab("Variant indexicality") +
ylab("Final week frequency")
library(ggpubr)
ggarrange(indxRedBrownBlack, indxPinkGreen, nrow=2, labels=c("A","B"))
indxRedBrownBlack = ggplot(variants[variants$colourName %in% c("red","brown","black"),],
aes(x=indexical, y = freq_week_4,colour = colourName)) +
geom_point(position = position_jitter(height = 0, width=0.2)) +
scale_colour_manual(breaks=c("red","brown","black"), values = c("red","brown","black")) +
theme(legend.position = 'none') +
xlab("Variant indexicality") +
ylab("Final week frequency")
indxPinkGreen = ggplot(variants[variants$colourName %in% c("pink","green"),],
aes(x=indexical, y = freq_week_4,colour = colourName)) +
geom_point(position = position_jitter(height = 0, width=0.2)) +
scale_colour_manual(breaks=c("pink","green"), values = c("pink","green")) +
theme(legend.position = 'none') +
xlab("Variant indexicality") +
ylab("Final week frequency")
ggarrange(indxRedBrownBlack, indxPinkGreen, nrow=2, labels=c("A","B"))
ggarrange(indxRedBrownBlack, indxPinkGreen, ncol=2, labels=c("A","B"))
indxRedBrownBlack = ggplot(variants[variants$colourName %in% c("red","brown","black"),],
aes(x=indexical, y = freq_week_4,colour = colourName)) +
geom_point(position = position_jitter(height = 0, width=0.2)) +
scale_colour_manual(breaks=c("red","brown","black"), values = c("red","brown","black")) +
theme(legend.position = 'none') +
xlab("Variant indexicality") +
ylab("Final week frequency")+
coord_cartesian(ylim=c(0,12.5))
indxPinkGreen = ggplot(variants[variants$colourName %in% c("pink","green"),],
aes(x=indexical, y = freq_week_4,colour = colourName)) +
geom_point(position = position_jitter(height = 0, width=0.2)) +
scale_colour_manual(breaks=c("pink","green"), values = c("pink","green")) +
theme(legend.position = 'none') +
xlab("Variant indexicality") +
ylab("Final week frequency") +
coord_cartesian(ylim=c(0,12.5))
ggarrange(indxRedBrownBlack, indxPinkGreen, ncol=2, labels=c("A","B"))
indxRedBrownBlack = ggplot(variants[variants$colourName %in% c("red","brown","black"),],
aes(x=indexical, y = freq_week_4,colour = colourName)) +
geom_point(position = position_jitter(height = 0, width=0.2)) +
scale_colour_manual(breaks=c("red","brown","black"), values = c("red","brown","black")) +
theme(legend.position = 'none') +
xlab("Variant indexicality") +
ylab("Final week frequency")+
coord_cartesian(ylim=c(0,13))
indxPinkGreen = ggplot(variants[variants$colourName %in% c("pink","green"),],
aes(x=indexical, y = freq_week_4,colour = colourName)) +
geom_point(position = position_jitter(height = 0, width=0.2)) +
scale_colour_manual(breaks=c("pink","green"), values = c("pink","green")) +
theme(legend.position = 'none') +
xlab("Variant indexicality") +
ylab("Final week frequency") +
coord_cartesian(ylim=c(0,13))
ggarrange(indxRedBrownBlack, indxPinkGreen, ncol=2, labels=c("A","B"))
indx = ggarrange(indxRedBrownBlack, indxPinkGreen, ncol=2, labels=c("A","B"))
indx
pdf("../results/descriptive/graphs/Indexicality_RedBrownBlack_GreenPink.pdf",
width = 8,height=4)
indx
dev.off()
indx = ggarrange(indxRedBrownBlack, indxPinkGreen, ncol=2, labels=c("A","B"))
indx
pdf("../results/descriptive/graphs/Indexicality_RedBrownBlack_GreenPink.pdf",
width = 6,height=3)
indx
dev.off()
ggplot(variants[variants$colourName %in% c("red","brown","black"),],
aes(x=indexical, y = freq_week_4,colour = colourName)) +
geom_point(position = position_jitter(height = 0, width=0.2),alpha=0.8) +
scale_colour_manual(breaks=c("red","brown","black"), values = c("red","brown","black")) +
theme(legend.position = 'none') +
xlab("Variant indexicality") +
ylab("Final week frequency")+
coord_cartesian(ylim=c(0,13))
ggplot(variants[variants$colourName %in% c("red","brown","black"),],
aes(x=indexical, y = freq_week_4,colour = colourName)) +
geom_point(position = position_jitter(height = 0, width=0.2),alpha=0.5) +
scale_colour_manual(breaks=c("red","brown","black"), values = c("red","brown","black")) +
theme(legend.position = 'none') +
xlab("Variant indexicality") +
ylab("Final week frequency")+
coord_cartesian(ylim=c(0,13))
ggplot(variants[variants$colourName %in% c("red","brown","black"),],
aes(x=indexical, y = freq_week_4,colour = colourName)) +
geom_point(position = position_jitter(height = 0, width=0.2),alpha=0.7) +
scale_colour_manual(breaks=c("red","brown","black"), values = c("red","brown","black")) +
theme(legend.position = 'none') +
xlab("Variant indexicality") +
ylab("Final week frequency")+
coord_cartesian(ylim=c(0,13))
setwd("~/OneDrive - Cardiff University/Research/MPI/KangSukColours/ColourExperiment/analysis")
variants = read.csv('../data/processedData/variants_summary.csv', stringsAsFactors = F)
head(variants)
table(variants$origin)
prop.table(table(variants$origin))
prop.table(table(variants[!is.na(variants$freq_week_4_total),]$origin))
0.87804878
1- 0.87804878
1 - 0.928571429
library(ggplot2)
library(lme4)
library(Rmisc)
library(dplyr)
library(sjPlot)
library(gridExtra)
library(REEMtree)
library(ggpubr)
getMEText = function(r,ef, wald=NULL, showWald=F){
AIC = r[2,]$AIC
loglikDiff = signif(diff(r$logLik),2)
chi = round(r$Chisq[2],2)
df = r$`Chi Df`[2]
p = signif(r$`Pr(>Chisq)`[2],2)
wald.text = ""
if(!is.null(wald)){
est = signif(wald[1],2)
stder = signif(wald[2],2)
t = signif(wald[3],2)
wptext = ""
wald.text =  paste("beta = ",est,",")
if(showWald){
if(!is.na(wald[4])){
wptext = paste(", Wald p =",signif(wald[4],2))
}
wald.text = paste("beta = ",est,", std.err = ",stder, ", Wald t = ",t,wptext,';')
}
}
begin = 'There was no significant'
if(p <0.09){
begin = "There was a marginal"
}
if(p < 0.05){
begin = 'There was a significant'
}
return(paste(begin,ef,"(",wald.text,"log likelihood difference =",
loglikDiff,", df = ",df,", Chi Squared =", chi,", p = ",p,")."))
}
variants = read.csv('../data/processedData/variants_summary.csv', stringsAsFactors = F)
variants = variants[variants$colourName!='white',]
variants = variants[!variants$sign %in%
c("SAME",
"DIFFERENT",
"DO NOT UNDERSTAND",
"UNDERSTAND",
"ME",
"YOU",
"YES",
"NOT",
"SIGNING"),]
table(variants$Teach)
# So we'll turn it into a binary category:
#  variants that were never taught and variants that were
variants$Teach = as.factor(variants$Teach >0)
# Similar for checking
variants$check.any = as.factor(variants$check>0)
variants$candidateUnderstanding.any = as.factor(variants$candidateUnderstanding>0)
variants$T0 = c("No","Check")[as.numeric(variants$check.any=="TRUE")+1]
variants$T0[variants$candidateUnderstanding.any=="TRUE"] = "Candidate Understanding"
# Collapse checks and candidate understandings
variants$T0[variants$T0 %in% c("Check","Candidate Understanding")] = "Yes"
variants$T0 = factor(variants$T0, levels = c("No","Yes"))
# ... and T-1
variants$T_minus_1.any = as.factor(variants$T_minus_1>0)
# Transform total frequency
variants$freq_week_1_total.logcenter =
log(variants$freq_week_1_total + 1)
variants$freq_week_1_total.logcenter = scale(variants$freq_week_1_total.logcenter)
# cut TryMarking into two categories
variants$TryMarked.any = as.factor(variants$TryMarked>0)
# transform length
# One extreme value is scaled down to the next highest number
variants$averageLength_week_1[
variants$averageLength_week_1>30000] =
max(variants$averageLength_week_1[
variants$averageLength_week_1<20000])
variants$averageLength_week_1.logcenter = log(variants$averageLength_week_1)
variants$averageLength_week_1.logcenter =
scale(variants$averageLength_week_1.logcenter)
variants$indexical = as.factor(variants$indexical)
# Make inventedBy deviation coding
#  (deviation from the grand mean)
variants$inventedBy = as.factor(variants$inventedBy)
#contrasts(variants$inventedBy) = contr.sum(length(levels(variants$inventedBy)))
tapply(variants$freq_week_4_total, variants$origin)
tapply(variants$freq_week_4_total, variants$origin,sum)
tapply(variants$freq_week_4_total, variants$origin,sum,na.rm=T)
tapply(variants$freq_week_1_total, variants$origin,sum,na.rm=T)
prop.table(tapply(variants$freq_week_1_total, variants$origin,sum,na.rm=T))
prop.table(tapply(variants$freq_week_4_total, variants$origin,sum,na.rm=T))
1-0.85812672
1-0.82051282
x = variants[variants$origin!="None",]
x[x$colourName=="white",]
x[x$colourName=="White",]
table(x$colourName)
x[x$colourName=="Green",]
x[x$colourName=="green",]
variants[variants$colourName=="green",]
variants[variants$colourName=="pink",]
variants[variants$colourName=="red",]
variants[variants$colourName=="yellow",]
variants[variants$colourName=="pink",]
table(x$colourName)
variants[variants$colourName=="red",]
variants[variants$colourName=="green",]
variants[variants$colourName=="green",]
5/(5+12)
