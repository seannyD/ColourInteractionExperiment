summary(lm(log(1 + freq_week_4) ~ log(freq_week_1+1) + iconic + check + inventedBy, data=variants))
variants$iconic = as.factor(variants$iconic)
variants$inventedBy = as.factor(variants$inventedBy)
f = ctree(freq_week_4 ~ freq_week_1 + iconic + check + inventedBy, data=variants, control=ctree_control(mincriterion = 0.5))
plot(f)
d3 = d
d3$iconic[is.na(d3$iconic)] = "No"
d3$freq_week_4[is.na(d3$freq_week_4)] = 0
for(i in c('iconic','speakerName','inventedBy')){
d3[,i] = as.factor(d3[,i])
}
summary(lm(log(1 + freq_week_4) ~ iconic + T0Check + inventedBy, data=d3))
f2 = ctree(freq_week_4 ~ iconic + T0Check + speakerName + sign_length+ inventedBy, data=d3, control=ctree_control(mincriterion = 0.95))
plot(f2, inner_panel=node_inner(f2,id=F),terminal_panel=node_barplot)
table(d$sign_value,d$week)
table(d[d$sign_value %in% colourNumbers,]$sign_value,d[d$sign_value %in% colourNumbers,]$week)
table(d[d$trial_value %in% colourNumbers,]$sign_value,d[d$trial_value %in% colourNumbers,]$week)
tapply(d[d$trial_value %in% colourNumbers,]$sign_value, d[d$trial_value %in% colourNumbers,]$trial_value, function(X){length(unique(X,na.rm=T))})
table(d$week)
week1 = tapply(d[d$trial_value %in% colourNumbers & d$week==1,]$sign_value, d[d$trial_value %in% colourNumbers & d$week==1,]$trial_value, function(X){length(unique(X,na.rm=T))})
week2 = tapply(d[d$trial_value %in% colourNumbers & d$week==4,]$sign_value, d[d$trial_value %in% colourNumbers & d$week==4,]$trial_value, function(X){length(unique(X,na.rm=T))})
cbind(week1,week2)
barplot(cbind(week1,week2))
barplot(rbind(week1,week2))
barplot(rbind(week1,week2),beside=T)
barplot(cbind(week1,week2),beside=T)
xtab = cbind(week1,week2)
rownames(xtab)
names(colourNames) = colourNumbers
colourNames[rownames(xtab)]
barplot(xtab,beside=T, col=colourNames[rownames(xtab)])
colourNames[rownames(xtab)]
barplot(xtab,beside=T, col=colourNames[rownames(xtab)])
xtab = cbind(week1,week4)
week4 = tapply(d[d$trial_value %in% colourNumbers & d$week==4,]$sign_value, d[d$trial_value %in% colourNumbers & d$week==4,]$trial_value, function(X){length(unique(X,na.rm=T))})
xtab = cbind(week1,week4)
barplot(xtab,beside=T, col=colourNames[rownames(xtab)])
barplot(xtab,beside=T, col=colourNames[rownames(xtab)], main='Number of Variants')
pdf("../results/descriptive/graphs/NumberOfVariantsByColourByWeek")
barplot(xtab,beside=T, col=colourNames[rownames(xtab)], main='Number of Variants')
dev.off()
pdf("../results/descriptive/graphs/NumberOfVariantsByColourByWeek.pdf")
barplot(xtab,beside=T, col=colourNames[rownames(xtab)], main='Number of Variants')
dev.off()
pdf("../results/descriptive/graphs/NumberOfVariantsByColourByWeek.pdf", width=10)
barplot(xtab,beside=T, col=colourNames[rownames(xtab)], main='Number of Variants')
dev.off()
pdf("../results/descriptive/graphs/NumberOfVariantsByColourByWeek.pdf", width=8, height=4)
barplot(xtab,beside=T, col=colourNames[rownames(xtab)], main='Number of Variants')
dev.off()
pdf("../results/descriptive/graphs/NumberOfVariantsByColourByWeek.pdf", width=8, height=5)
barplot(xtab,beside=T, col=colourNames[rownames(xtab)], main='Number of Variants')
dev.off()
table(d[d$week==4 & d$trial_value=='18',]$sign_value)
unique(d$sign_value)
sort(unique(d$sign_value))
cat(sort(unique(d$sign_value)),file="../processing/ListOfVariants.txt")
cat(sort(unique(d[d$trial_value %in% colourNumbers,]$sign_value)),file="../processing/ListOfVariants.txt")
cat(paste(sort(unique(d$sign_value)),collapse='\n',file="../processing/ListOfVariants.txt")
allTargetVars = sort(unique(d[d$trial_value %in% colourNumbers,]$sign_value))
paste('"',allTargetVars,'"')
cat(
paste(paste('"',allTargetVars,'"',sep=''),collapse='\n'),
file="../processing/ListOfVariants.txt")
setwd("~/Documents/MPI/KangSukColours/ColourExperiment/analysis/")
d = read.csv("../data/processedData/variants_processed.csv", stringsAsFactors = F)
colourNumbers = c("1","5","7","14",'18','24')
colourNames = c("red",'brown','black','green','yellow','pink')
names(colourNames) = colourNumbers
d = d[d$trial_value %in% colourNumbers,]
sun = table(d[d$sign_value=="SUN",]$week)
yellow = table(d[d$sign_value=="GREEN1-1",]$week)
barplot(rbind(sun,yellow), beside=T, xlab='week', ylab='frequency', ylim=c(0,20),col=1:2)
legend(1,20,legend=c("SUN","GREEN1-1"), col=1:2, pch=15)
pdf("../results/descriptive/graphs/IconicityByWeek.pdf")
barplot(table(d$iconic,d$week), col=1:2, xlab='Week')
legend(1.5,150,legend=c("Iconic","Not iconic"), col=2:1, pch=15)
dev.off()
library(gplots)
pdf("../results/descriptive/graphs/LengthByWeek_YELLOW.pdf")
plotmeans(d[d$sign_value=="YELLOW",]$sign_length~d[d$sign_value=="YELLOW",]$week, xlab='Week', ylab="Length (ms)", main='Length of the sign YELLOW')
dev.off()
pdf("../results/descriptive/graphs/LengthByWeek.pdf")
plotmeans(d$sign_length~d$week, xlab='Week', ylab="Length (ms)", main='Length of signs')
dev.off()
pdf("../results/descriptive/graphs/IconicByWeekByPart.pdf")
partIconic = table(d$iconic,d$speakerName,d$week)
cbind(partIconic[,,1],partIconic[,,2])
barplot(cbind(partIconic[,,1],partIconic[,,2]), col=1:2)
abline(v=4.9)
text(c(2.5,7.5),c(65,65), c("Week 1", "Week 4"))
legend(5,90, c("Iconic","Non-iconic"), col=1:2, pch=15)
dev.off()
pdf("../results/descriptive/graphs/NumVarByFreq.pdf")
plot(as.vector(table(inventedBy)), as.vector(table(d$inventedBy)), xlab='Number of variants innovated', ylab="Frequency of variants", col='white')
text(as.vector(table(inventedBy)), as.vector(table(d$inventedBy)), names(table(inventedBy)))
dev.off()
pdf("../results/descriptive/graphs/NumVariants.pdf")
cols = rainbow(2)
barplot(matrix(tapply(d$sign_value, paste(d$speakerName,d$week), function(X){length(unique(X))}), nrow=2), beside = T, names.arg = sort(unique(d$speakerName)), col=cols, main='Number of variants used')
legend(9,80,c("Week 1","Week 4"), col=cols, pch=15)
dev.off()
###########
variants = data.frame()
for(colourID in colourNumbers){
d2 =d[d$trial_value==colourID,]
v = data.frame(colour=colourID, colourName = colourNames[which(colourNumbers==colourID)],sign=unique(d2[d2$week==1,]$sign_value[nchar(d2[d2$week==1,]$sign_value)>0]), stringsAsFactors = F)
v$freq_week_1 = table(d2[d2$week==1,]$sign_value)[v$sign]
v$freq_week_4 = table(d2[d2$week==4,]$sign_value)[v$sign]
v$iconic = tapply(d2$iconic, d2$sign_value, head,n=1)[v$sign]
v$check = tapply(d2[d2$week==1,]$T0Check,d2[d2$week==1,]$sign_value,function(X){sum(X,na.rm=T)>0})[v$sign]
v$inventedBy= tapply(d2$inventedBy, d2$sign_value, head, n=1)[v$sign]
variants = rbind(variants,v)
}
variants$iconic[is.na(variants$iconic)] = "No"
variants$freq_week_4[is.na(variants$freq_week_4)] = 0
summary(lm(log(1 + freq_week_4) ~ log(freq_week_1+1) + iconic + check + inventedBy, data=variants))
week1 = tapply(d[d$trial_value %in% colourNumbers & d$week==1,]$sign_value, d[d$trial_value %in% colourNumbers & d$week==1,]$trial_value, function(X){length(unique(X,na.rm=T))})
week4 = tapply(d[d$trial_value %in% colourNumbers & d$week==4,]$sign_value, d[d$trial_value %in% colourNumbers & d$week==4,]$trial_value, function(X){length(unique(X,na.rm=T))})
xtab = cbind(week1,week4)
pdf("../results/descriptive/graphs/NumberOfVariantsByColourByWeek.pdf", width=8, height=5)
barplot(xtab,beside=T, col=colourNames[rownames(xtab)], main='Number of Variants')
dev.off()
#######
library(party)
variants$iconic = as.factor(variants$iconic)
variants$inventedBy = as.factor(variants$inventedBy)
f = ctree(freq_week_4 ~ freq_week_1 + iconic + check + inventedBy, data=variants, control=ctree_control(mincriterion = 0.5))
plot(f)
d3 = d
d3$iconic[is.na(d3$iconic)] = "No"
d3$freq_week_4[is.na(d3$freq_week_4)] = 0
for(i in c('iconic','speakerName','inventedBy')){
d3[,i] = as.factor(d3[,i])
}
summary(lm(log(1 + freq_week_4) ~ iconic + T0Check + inventedBy, data=d3))
f2 = ctree(freq_week_4 ~ iconic + T0Check + speakerName + sign_length+ inventedBy, data=d3, control=ctree_control(mincriterion = 0.95))
plot(f2, inner_panel=node_inner(f2,id=F),terminal_panel=node_barplot)
partIconic = table(d$iconic,d$speakerName,d$week)
cbind(partIconic[,,1],partIconic[,,2])
barplot(cbind(partIconic[,,1],partIconic[,,2]), col=1:2)
abline(v=4.9)
text(c(2.5,7.5),c(65,65), c("Week 1", "Week 4"))
legend(5,90, c("Iconic","Non-iconic"), col=1:2, pch=15)
legend(5,50, c("Iconic","Non-iconic"), col=1:2, pch=15)
pdf("../results/descriptive/graphs/IconicByWeekByPart.pdf")
partIconic = table(d$iconic,d$speakerName,d$week)
cbind(partIconic[,,1],partIconic[,,2])
barplot(cbind(partIconic[,,1],partIconic[,,2]), col=1:2)
abline(v=4.9)
text(c(2.5,7.5),c(65,65), c("Week 1", "Week 4"))
legend(5,50, c("Iconic","Non-iconic"), col=2:1, pch=15)
dev.off()
pdf("../results/descriptive/graphs/NumVarByFreq.pdf", width=8, height=5)
plot(as.vector(table(inventedBy)), as.vector(table(d$inventedBy)), xlab='Number of variants innovated', ylab="Frequency of variants", col='white')
text(as.vector(table(inventedBy)), as.vector(table(d$inventedBy)), names(table(inventedBy)))
dev.off()
pdf("../results/descriptive/graphs/NumVariants.pdf", width=8, height=5)
cols = rainbow(2)
barplot(matrix(tapply(d$sign_value, paste(d$speakerName,d$week), function(X){length(unique(X))}), nrow=2), beside = T, names.arg = sort(unique(d$speakerName)), col=cols, main='Number of variants used')
legend(9,80,c("Week 1","Week 4"), col=cols, pch=15)
dev.off()
partIconic = table(d$iconic,d$speakerName,d$week)
cbind(partIconic[,,1],partIconic[,,2])
barplot(cbind(partIconic[,,1],partIconic[,,2]), col=1:2)
abline(v=4.9)
text(c(2.5,7.5),c(65,65), c("Week 1", "Week 4"))
legend(5,50, c("Iconic","Non-iconic"), col=2:1, pch=15)
pdf("../results/descriptive/graphs/IconicByWeekByPart.pdf", width=8, height=5)
partIconic = table(d$iconic,d$speakerName,d$week)
cbind(partIconic[,,1],partIconic[,,2])
barplot(cbind(partIconic[,,1],partIconic[,,2]), col=1:2)
abline(v=4.9)
text(c(2.5,7.5),c(65,65), c("Week 1", "Week 4"))
legend(5,50, c("Iconic","Non-iconic"), col=2:1, pch=15)
dev.off()
plotmeans(d$sign_length,d$trial_value)
d$trialColourName = colourNames[d$trial_value]
table(d$trialColourName)
sum(table(d$trialColourName))
dim(d)
plotmeans(d$sign_length,d$trialColourName)
plotmeans(d$sign_length~d$trialColourName)
plotmeans(d$sign_length~d$trialColourName, connect = F, col = colourNames)
colourNames[sort(colourNumbers)]
colourNames[sort(as.numeric(colourNumbers))]
colourNames[colourNumbers[order(as.numeric(colourNumbers))]]
?factor
d$trialColourName = factor(d$trialColourName, levels = colourNames)
table(d$trialColourName)
plotmeans(d$sign_length~d$trialColourName, connect = F, col = colourNames)
plotmeans(d$sign_length~d$trialColourName, connect = F, col = colourNames, pch=16)
plotmeans(d$sign_length~d$trialColourName, connect = F, col = colourNames, pch=16, barcol = colourNames)
plotmeans(d$sign_length~d$trialColourName, connect = F, col = colourNames, pch=16, barcol = 1)
plotmeans(d$sign_length~d$trialColourName, connect = F, col = colourNames, pch=16, barcol = 1,xlab='Colour', ylab='Sign length (ms)')
head(d)
plotmeans(sign_length~trialColourName,  d[d$director==d$speaker,], connect = F, col = colourNames, pch=16, barcol = 1,xlab='Colour', ylab='Sign length (ms)')
plotmeans(sign_length~trialColourName,  d[d$director==d$speaker & d$week==1,], connect = F, col = colourNames, pch=16, barcol = 1,xlab='Colour', ylab='Sign length (ms)')
plotmeans(sign_length~trialColourName,  d[d$director==d$speaker & d$week==4,], connect = F, col = colourNames, pch=16, barcol = 1,xlab='Colour', ylab='Sign length (ms)', add=T)
tapply(d[d$director==d$speaker & d$week==1,]$sign_length, d[d$director==d$speaker & d$week==1,]$trialColourName, mean)
week1L = tapply(d[d$director==d$speaker & d$week==1,]$sign_length, d[d$director==d$speaker & d$week==1,]$trialColourName, mean)
week2L = tapply(d[d$director==d$speaker & d$week==1,]$sign_length, d[d$director==d$speaker & d$week==4,]$trialColourName, mean)
week1L = tapply(d[d$director==d$speaker & d$week==1,]$sign_length, d[d$director==d$speaker & d$week==1,]$trialColourName, mean)
week2L = tapply(d[d$director==d$speaker & d$week==4,]$sign_length, d[d$director==d$speaker & d$week==4,]$trialColourName, mean)
plot(range(week1L))
plot(range(week1L), type='n')
points(1.2, week1L)
points(rep(1.2,length(week1L)), week1L)
points(rep(1.2,length(week1L)), week1L, col=colourNames)
points(rep(1.2,length(week1L)), week1L, col=colourNames, pch=16)
plot(range(week1L), type='n')
points(rep(1.2,length(week1L)), week1L, col=colourNames, pch=16)
for(i in 1:length(colourNames)){
plotmeans(sign_length~week, data = d[d$director==d$speaker & d$trialColourName==colourNames[i], ], add=i!=1, col=colourNames[i])
}
?plotmeans
for(i in 1:length(colourNames)){
plotmeans(sign_length~week, data = d[d$director==d$speaker & d$trialColourName==colourNames[i], ], add=i!=1, col=colourNames[i], xlim=c(0,3))
}
for(i in 1:length(colourNames)){
plotmeans(sign_length~week, data = d[d$director==d$speaker & d$trialColourName==colourNames[i], ], add=i!=1, col=colourNames[i])
}
for(i in 1:length(colourNames)){
plotmeans(sign_length~week, data = d[d$director==d$speaker & d$trialColourName==colourNames[i], ], add=i!=1, col=colourNames[i], bars=F)
}
plot(range(week1L), type='n')
points(rep(1.2,length(week1L)), week1L, col=colourNames, pch=16)
points(rep(1.8,length(week4L)), week1L, col=colourNames, pch=16)
week4L = tapply(d[d$director==d$speaker & d$week==4,]$sign_length, d[d$director==d$speaker & d$week==4,]$trialColourName, mean)
plot(range(week1L), type='n')
points(rep(1.2,length(week1L)), week1L, col=colourNames, pch=16)
points(rep(1.8,length(week4L)), week1L, col=colourNames, pch=16)
points(rep(1.8,length(week4L)), week4L, col=colourNames, pch=16)
plot(range(week1L), type='n')
points(rep(1.2,length(week1L)), week1L, col=colourNames, pch=16)
points(rep(1.8,length(week4L)), week4L, col=colourNames, pch=16)
plotmeans(d$sign_length~d$week)
plotmeans(d$trial_length~d$week)
?lines
plot(range(week1L), type='n')
points(rep(1.2,length(week1L)), week1L, col=colourNames, pch=16)
points(rep(1.8,length(week4L)), week4L, col=colourNames, pch=16)
for(i in 1:length(week1L)){
lines(1.2,1.8,week1L[i],week4L[i], col=colourNames[i])
}
week1L[i]
plot(range(week1L), type='n')
points(rep(1.2,length(week1L)), week1L, col=colourNames, pch=16)
points(rep(1.8,length(week4L)), week4L, col=colourNames, pch=16)
for(i in 1:length(week1L)){
lines(c(1.2,1.8),c(week1L[i],week4L[i]), col=colourNames[i])
}
plot(range(week1L),1:2, type='n',x)
plot(range(week1L),1:2, type='n')
plot(range(week1L)~1:2, type='n')
plot(1:2,range(week1L), type='n')
plot(0.5:2.5,range(week1L), type='n')
0.5:2.5
plot(c(0.5,2.5),range(week1L), type='n')
plot(c(0.5,2.5),range(week1L), type='n')
points(rep(1,length(week1L)), week1L, col=colourNames, pch=16)
points(rep(2,length(week4L)), week4L, col=colourNames, pch=16)
for(i in 1:length(week1L)){
lines(c(1,2),c(week1L[i],week4L[i]), col=colourNames[i])
}
?range
axis(1,at=1:2, c("Week 1", "Week 2"))
plot(c(0.5,2.5),range(week1L), type='n', ylab='Sign length (ms)', xlab='Week', xaxt="n")
axis(1,at=1:2, c("Week 1", "Week 2"))
points(rep(1,length(week1L)), week1L, col=colourNames, pch=16)
points(rep(2,length(week4L)), week4L, col=colourNames, pch=16)
for(i in 1:length(week1L)){
lines(c(1,2),c(week1L[i],week4L[i]), col=colourNames[i])
}
pdf("../results/descriptive/graphs/LengthOfSignsByColour.pdf")
plot(c(0.5,2.5),range(week1L), type='n', ylab='Sign length (ms)', xlab='Week', xaxt="n")
axis(1,at=1:2, c("Week 1", "Week 2"))
points(rep(1,length(week1L)), week1L, col=colourNames, pch=16)
points(rep(2,length(week4L)), week4L, col=colourNames, pch=16)
for(i in 1:length(week1L)){
lines(c(1,2),c(week1L[i],week4L[i]), col=colourNames[i])
}
dev.off()
pdf("../results/descriptive/graphs/LengthOfSignsByColour.pdf")
plot(c(0.5,2.5),range(week1L), type='n', ylab='Sign length (ms)', xlab='Week', xaxt="n")
axis(1,at=1:2, c("Week 1", "Week 4"))
points(rep(1,length(week1L)), week1L, col=colourNames, pch=16)
points(rep(2,length(week4L)), week4L, col=colourNames, pch=16)
for(i in 1:length(week1L)){
lines(c(1,2),c(week1L[i],week4L[i]), col=colourNames[i])
}
dev.off()
for(i in 1:length(colourNames)){
plotmeans(sign_length~week, data = d[d$director==d$speaker & d$trialColourName==colourNames[i], ], add=i!=1, col=colourNames[i], bars=F)
}
for(i in 1:length(colourNames)){
plotmeans(sign_length~week, data = d[d$director==d$speaker & d$trialColourName==colourNames[i], ], add=i!=1, col=colourNames[i])
}
week1L.trial = tapply(d[d$director==d$speaker & d$week==1,]$trial_length, d[d$director==d$speaker & d$week==1,]$trialColourName, mean)
warnings()
week1L.trial = tapply(d[d$director==d$speaker & d$week==1,]$trial_length, d[d$director==d$speaker & d$week==1,]$trialColourName, mean)
week4L.trial = tapply(d[d$director==d$speaker & d$week==4,]$trial_length, d[d$director==d$speaker & d$week==4,]$trialColourName, mean)
plot(c(0.5,2.5),range(week1L), type='n', ylab='Sign length (ms)', xlab='Week', xaxt="n")
axis(1,at=1:2, c("Week 1", "Week 4"))
points(rep(1,length(week1L.trial)), week1L.trial, col=colourNames, pch=16)
points(rep(2,length(week4L.trial)), week4L.trial, col=colourNames, pch=16)
for(i in 1:length(week1L)){
lines(c(1,2),c(week1L.trial[i],week4L.trial[i]), col=colourNames[i])
}
plot(c(0.5,2.5),range(week1L.trial), type='n', ylab='Sign length (ms)', xlab='Week', xaxt="n")
axis(1,at=1:2, c("Week 1", "Week 4"))
points(rep(1,length(week1L.trial)), week1L.trial, col=colourNames, pch=16)
points(rep(2,length(week4L.trial)), week4L.trial, col=colourNames, pch=16)
for(i in 1:length(week1L)){
lines(c(1,2),c(week1L.trial[i],week4L.trial[i]), col=colourNames[i])
}
plot(c(0.5,2.5),range(c(week1L.trial,week4L.trial)), type='n', ylab='Sign length (ms)', xlab='Week', xaxt="n")
axis(1,at=1:2, c("Week 1", "Week 4"))
points(rep(1,length(week1L.trial)), week1L.trial, col=colourNames, pch=16)
points(rep(2,length(week4L.trial)), week4L.trial, col=colourNames, pch=16)
for(i in 1:length(week1L)){
lines(c(1,2),c(week1L.trial[i],week4L.trial[i]), col=colourNames[i])
}
barplot(cbind(week1L.trial, week4L.trial))
barplot(cbind(week1L.trial, week4L.trial),beside = T)
barplot(rbind(week1L.trial, week4L.trial),beside = T)
barplot(rbind(week1L.trial, week4L.trial),beside = T, col=colourNames)
paste("dark",colourNames)
colourNamesDark = paste("dark",colourNames)
colourNamesDark[which(colourNames=='black')] = 'gray'
barplot(rbind(week1L.trial, week4L.trial),beside = T, col=colourNames)
barplot(rbind(week1L.trial, week4L.trial),beside = T, col=cbind(colourNames,colourNamesDark))
colourNamesDark = c("dark red", 'light brown', 'gray', 'dark green','dark yellow', 'dark pink')
plot(1:length(colourNamesDark), col=colourNamesDark)
colourNamesDark = c("dark red", 'dark brown', 'gray', 'dark green','dark yellow', 'dark pink')
plot(1:length(colourNamesDark), col=colourNamesDark)
colourNamesDark = c("dark red", 'orange', 'gray', 'dark green','dark yellow', 'dark pink')
plot(1:length(colourNamesDark), col=colourNamesDark)
colourNamesDark = c("dark red", 'orange', 'gray', 'dark green','gold', 'dark pink')
plot(1:length(colourNamesDark), col=colourNamesDark)
colourNamesDark = c("dark red", 'orange', 'gray', 'dark green','gold', 'purple')
plot(1:length(colourNamesDark), col=colourNamesDark)
barplot(rbind(week1L.trial, week4L.trial),beside = T, col=rep(colourNames,each=2))
library(ggplot2)
myData <- aggregate(d[d$director==d$speaker,]$trial_length,
by = list(colour = d[d$director==d$speaker,]$trialColourName, d[d$director==d$speaker,]$week),
FUN = function(x) c(mean = mean(x), sd = sd(x),
n = length(x)))
myData
colnames(myData) = c('Colour','Week','mean','sd','n')
colnames(myData) = c('Colour','Week','mean','sd','n','se')
myData
colnames(myData)
myData <- do.call(data.frame, myData)
myData$se <- myData$x.sd / sqrt(myData$x.n)
colnames(myData) = c('Colour','Week','mean','sd','n','se')
myData <- aggregate(d[d$director==d$speaker,]$trial_length,
by = list(colour = d[d$director==d$speaker,]$trialColourName, d[d$director==d$speaker,]$week),
FUN = function(x) c(mean = mean(x), sd = sd(x),
myData <- aggregate(d[d$director==d$speaker,]$trial_length,
by = list(colour = d[d$director==d$speaker,]$trialColourName, d[d$director==d$speaker,]$week),
FUN = function(x) c(mean = mean(x), sd = sd(x),
n = length(x)))
myData <- do.call(data.frame, myData)
myData$se <- myData$x.sd / sqrt(myData$x.n)
myData <- aggregate(d[d$director==d$speaker,]$trial_length,
by = list(colour = d[d$director==d$speaker,]$trialColourName, d[d$director==d$speaker,]$week),
FUN = function(x) c(mean = mean(x), sd = sd(x),
n = length(x)))
myData <- do.call(data.frame, myData)
myData$se <- myData$x.sd / sqrt(myData$x.n)
colnames(myData) = c('Colour','Week','mean','sd','n','se')
p <- ggplot(data = myData, aes(x = Colour, y = mean, fill = Colour))
p + geom_bar(stat = "identity", position = dodge) +
geom_errorbar(limits, position = dodge, width = 0.25) +
theme(axis.text.x=element_blank(), axis.ticks.x=element_blank(),
axis.title.x=element_blank())
dodge <- position_dodge(width = 0.9)
p + geom_bar(stat = "identity", position = dodge) +
geom_errorbar(limits, position = dodge, width = 0.25) +
theme(axis.text.x=element_blank(), axis.ticks.x=element_blank(),
axis.title.x=element_blank())
limits <- aes(ymax = myData$mean + myData$se, ymin = myData$mean - myData$se)
p + geom_bar(stat = "identity", position = dodge) +
geom_errorbar(limits, position = dodge, width = 0.25) +
theme(axis.text.x=element_blank(), axis.ticks.x=element_blank(),
axis.title.x=element_blank())
p <- ggplot(data = myData, aes(x = Week, y = mean, fill = Colour))
p + geom_bar(stat = "identity", position = dodge) +
geom_errorbar(limits, position = dodge, width = 0.25) +
theme(axis.text.x=element_blank(), axis.ticks.x=element_blank(),
axis.title.x=element_blank())
p <- ggplot(data = myData, aes(x = Colour, y = mean, fill = Week))
p + geom_bar(stat = "identity", position = dodge) +
geom_errorbar(limits, position = dodge, width = 0.25) +
theme(axis.text.x=element_blank(), axis.ticks.x=element_blank(),
axis.title.x=element_blank())
p + geom_bar(stat = "identity", position = position_dodge(0.9)) +
geom_errorbar(limits, position = dodge, width = 0.25) +
theme(axis.text.x=element_blank(), axis.ticks.x=element_blank(),
axis.title.x=element_blank())
p <- ggplot(data = myData, aes(x = factor(Week), y = mean, fill = Colour))
p + geom_bar(stat = "identity", position = position_dodge(0.9)) +
geom_errorbar(limits, position = dodge, width = 0.25) +
theme(axis.text.x=element_blank(), axis.ticks.x=element_blank(),
axis.title.x=element_blank())
?position_dodge
p + geom_bar(stat = "identity", position = 'dodge') +
geom_errorbar(limits, position = dodge, width = 0.25) +
theme(axis.text.x=element_blank(), axis.ticks.x=element_blank(),
axis.title.x=element_blank())
p + geom_bar(stat = "identity", position = 'dodge') +
geom_errorbar(limits, position = dodge, width = 0.25) +
theme(axis.text.x=element_blank(), axis.ticks.x=element_blank(),
axis.title.x=element_blank())
?geom_bar
p + geom_bar(stat = "identity", position = 'fill') +
geom_errorbar(limits, position = dodge, width = 0.25) +
theme(axis.text.x=element_blank(), axis.ticks.x=element_blank(),
axis.title.x=element_blank())
p <- ggplot(data = myData, aes(x = factor(Colour), y = mean, fill = Week))
p + geom_bar(stat = "identity", position = 'dodge') +
geom_errorbar(limits, position = dodge, width = 0.25) +
theme(axis.text.x=element_blank(), axis.ticks.x=element_blank(),
axis.title.x=element_blank())
p <- ggplot(data = myData, aes(x = factor(Colour:Week), y = mean, fill = Week))
p + geom_bar(stat = "identity", position = 'dodge') +
geom_errorbar(limits, position = dodge, width = 0.25) +
theme(axis.text.x=element_blank(), axis.ticks.x=element_blank(),
axis.title.x=element_blank())
p <- ggplot(data = myData, aes(x = Colour:Week, y = mean, fill = Week))
p + geom_bar(stat = "identity", position = 'dodge') +
geom_errorbar(limits, position = dodge, width = 0.25) +
theme(axis.text.x=element_blank(), axis.ticks.x=element_blank(),
axis.title.x=element_blank())
p <- ggplot(data = myData, aes(x = Colour, y = mean, group = Week))
p + geom_bar(stat = "identity", position = 'dodge') +
geom_errorbar(limits, position = dodge, width = 0.25) +
theme(axis.text.x=element_blank(), axis.ticks.x=element_blank(),
axis.title.x=element_blank())
p + geom_bar(stat = "identity", position = 'dodge') +
geom_errorbar(limits, position = dodge, width = 0.25) +
theme(axis.text.x=element_blank(), axis.ticks.x=element_blank(),
axis.title.x=element_blank()) +
scale_colour_manual(values=colourNames)
?geom_bar
p + geom_bar(stat = "identity", position = 'dodge', col=colourNames) +
geom_errorbar(limits, position = dodge, width = 0.25) +
theme(axis.text.x=element_blank(), axis.ticks.x=element_blank(),
axis.title.x=element_blank()) +
scale_colour_manual(values=colourNames)
p + geom_bar(stat = "identity", position = 'dodge', col=rep(colourNames,width=2)) +
geom_errorbar(limits, position = dodge, width = 0.25) +
theme(axis.text.x=element_blank(), axis.ticks.x=element_blank(),
axis.title.x=element_blank()) +
scale_colour_manual(values=colourNames)
p + geom_bar(stat = "identity", position = 'dodge', col=rep(colourNames,each=2)) +
geom_errorbar(limits, position = dodge, width = 0.25) +
theme(axis.text.x=element_blank(), axis.ticks.x=element_blank(),
axis.title.x=element_blank()) +
scale_colour_manual(values=colourNames)
p + geom_bar(stat = "identity", position = 'dodge', fill=rep(colourNames,each=2)) +
geom_errorbar(limits, position = dodge, width = 0.25) +
theme(axis.text.x=element_blank(), axis.ticks.x=element_blank(),
axis.title.x=element_blank()) +
scale_colour_manual(values=colourNames)
p + geom_bar(stat = "identity", position = 'dodge', fill=rep(colourNames,each=2)) +
geom_errorbar(limits, position = dodge, width = 0.25) +
theme(axis.text.x=colourNames, axis.ticks.x=element_blank(),
axis.title.x=element_blank()) +
scale_colour_manual(values=colourNames)
?theme
p + geom_bar(stat = "identity", position = 'dodge', fill=rep(colourNames,each=2)) +
geom_errorbar(limits, position = dodge, width = 0.25) +
theme(axis.text.x=element_text(), axis.ticks.x=element_blank(),
axis.title.x=element_blank()) +
scale_colour_manual(values=colourNames)
p + geom_bar(stat = "identity", position = 'dodge', fill=rep(colourNames,each=2)) +
geom_errorbar(limits, position = dodge, width = 0.25) +
theme(axis.text.x=element_text(), axis.ticks.x=element_blank(),
axis.title.x=element_blank(), plot.title=element_text("Trial Length"), axis.title.y = element_text("Trial length (ms)")) +
scale_colour_manual(values=colourNames)
?axis
p + geom_bar(stat = "identity", position = 'dodge', fill=rep(colourNames,each=2)) +
geom_errorbar(limits, position = dodge, width = 0.25) +
theme(axis.text.x=element_text(), axis.ticks.x=element_blank(),
axis.title.x=element_blank(), plot.title=element_text("Trial Length")) + ylab("Trial length (ms)") +
scale_colour_manual(values=colourNames)
pdf("../results/descriptive/graphs/LengthOfTrialsByColourAndWeek_gg.pdf")
p + geom_bar(stat = "identity", position = 'dodge', fill=rep(colourNames,each=2)) +
geom_errorbar(limits, position = dodge, width = 0.25) +
theme(axis.text.x=element_text(), axis.ticks.x=element_blank(),
axis.title.x=element_blank(), plot.title=element_text("Trial Length")) + ylab("Trial length (ms)") +
scale_colour_manual(values=colourNames)
dev.off()
myData <- aggregate(d[d$director==d$speaker,]$sign_length,
by = list(colour = d[d$director==d$speaker,]$trialColourName, d[d$director==d$speaker,]$week),
FUN = function(x) c(mean = mean(x), sd = sd(x),
n = length(x)))
myData <- do.call(data.frame, myData)
myData$se <- myData$x.sd / sqrt(myData$x.n)
colnames(myData) = c('Colour','Week','mean','sd','n','se')
dodge <- position_dodge(width = 0.9)
limits <- aes(ymax = myData$mean + myData$se, ymin = myData$mean - myData$se)
p <- ggplot(data = myData, aes(x = Colour, y = mean, group = Week))
pdf("../results/descriptive/graphs/LengthOfSignsByColourAndWeek_gg.pdf")
p + geom_bar(stat = "identity", position = 'dodge', fill=rep(colourNames,each=2)) +
geom_errorbar(limits, position = dodge, width = 0.25) +
theme(axis.text.x=element_text(), axis.ticks.x=element_blank(),
axis.title.x=element_blank(), plot.title=element_text("Sign Length")) + ylab("Sign length (ms)") +
scale_colour_manual(values=colourNames)
dev.off()
